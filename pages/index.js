import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.scss";
import Header from "../components/Header";
import styled from "styled-components";
import MembersList from "../components/MembersList";
import { collection, getDocs } from "firebase/firestore";
import { db } from "../Firebase/firebase";
export default function Home(props) {
  const AppContainer = styled.div`
    height: 100vh;
    overflow-y: scroll;
  `;
  const Main = styled.main`
    background-color: aliceblue;
    padding: 48px;
  `;
  const HeaderContainer = styled.div`
    position: sticky;
    top: 0;
    z-index: 10000000;
    background-color: rgba(255, 255, 255, 0.75);
    backdrop-filter: blur(4px);
  `;

  const Divider = styled.div`
    border: 1px #fff;
  `;

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppContainer>
        <HeaderContainer>
          <Header />
        </HeaderContainer>
        <Main>
          <h1>M2</h1>
          <MembersList list={props.M2} />
          <h1>M1</h1>
          <MembersList list={props.M1} />
          <h1>B4</h1>
          <MembersList list={props.B4} />
          <h1>B3</h1>
          <MembersList list={props.B3} />
          <h1>B2</h1>
          <MembersList list={props.B2} />
          {/* {props.M2.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })} */}
          {/* <h1>M1</h1>
          {props.M1.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })}
          <h1>B4</h1>
          {props.B4.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })}
          <h1>B3</h1>
          {props.B3.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })}
          <h1>B2</h1>
          {props.B2.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })} */}
          {/* {props.members.map((data) => {
            return (
              <MembersList
                name={data.name}
                iconURL={data.iconURL}
                grade={data.grade}
                belongTo={data.belongTo}
                portfolioURL={data.portfolioURL}
              />
            );
          })} */}
        </Main>
      </AppContainer>
    </div>
  );
}

export const getServerSideProps = async () => {
  let M2 = [];
  let M1 = [];
  let B4 = [];
  let B3 = [];
  let B2 = [];
  const querySnapshot = await getDocs(collection(db, "sentan-2022-early"));
  querySnapshot.forEach((doc) => {
    const data = doc.data();
    const member = {
      id: doc.id,
      name: data.name,
      iconURL: data.iconURL,
      grade: data.grade,
      portfolioURL: data.portfolioURL,
      belongTo: data.belongTo,
    };
    if (data.grade === "M2") {
      M2.push(member);
    } else if (data.grade === "M1") {
      M1.push(member);
    } else if (data.grade === "B4") {
      B4.push(member);
    } else if (data.grade === "B3") {
      B3.push(member);
    } else if (data.grade === "B2") {
      B2.push(member);
    }
  });
  return { props: { M2, M1, B4, B3, B2 } };
};
